version: 2.1

orbs:
  slack: circleci/slack@4.1.1

executors:
  node-executor:
    docker:
      - image: circleci/node:13.8.0
  aws-executor:
    docker:
      - image: circleci/awscli
commands:
  npm-install:
    parameters:
      dir:
        type: string
    steps:
      - run:
          command: |
            cd <<parameters.dir>>
            npm install
            npm run build
  run-test:
    parameters:
      dir:
        type: string
    steps:
      - run:
          command: |
            mkdir test-results
            cd <<parameters.dir>>
            npm run test
  run-scans:
    parameters:
      dir:
        type: string
    steps:
      - run:
          command: |
            cd <<parameters.dir>>
            npm audit fix --audit-level=critical

jobs:
  build-frontend:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - npm-install:
          dir: frontend
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build-{{ checksum "package-lock.json" }}
      - slack/notify:
          channel: udacity
          event: fail
          template: basic_fail_1

  build-backend:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - npm-install:
          dir: backend
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build-{{ checksum "package-lock.json" }}
      - slack/notify:
          channel: udacity
          event: fail
          template: basic_fail_1

  test-frontend:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build-]
      - run-test:
          dir: frontend
      - store_test_results:
          path: ./test-results/
      - slack/notify:
          channel: udacity
          event: fail
          template: basic_fail_1

  test-backend:
    executor: node-executor
    steps:
      - checkout 
      - restore_cache:
          keys: [backend-build-]
      - run-test:
          dir: backend
      - store_test_results:
          path: ./test-results/
      - slack/notify:
          channel: udacity
          event: fail
          template: basic_fail_1
        
  scan-frontend:
    executor: node-executor
    steps:
      - checkout 
      - restore_cache:
          keys: [frontend-build-]
      - run-scans:
          dir: frontend
      - slack/notify:
          channel: udacity
          event: fail
          template: basic_fail_1
                    
  scan-backend:
    executor: node-executor
    steps:
      - checkout 
      - restore_cache:
          keys: [backend-build-]
      - run-scans:
          dir: backend
      - slack/notify:
          channel: udacity
          event: fail
          template: basic_fail_1
###
workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]